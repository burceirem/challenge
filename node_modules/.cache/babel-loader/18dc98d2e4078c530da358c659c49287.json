{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikahraman\\\\Desktop\\\\son\\\\challenge\\\\src\\\\Pages\\\\Series\\\\Series.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Content from \"../../Components/Content/Content\";\nimport Container from 'react-bootstrap/Container';\nimport { Navbar, Nav, NavItem, NavDropdown, Button, Form, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\n\nconst Series = ({\n  seriesData\n}) => {\n  const [sort, setSort] = useState(\"title\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const getSortedData = sortKey => {\n    console.log(sortKey);\n\n    if (sortKey === 'year') {\n      return seriesData.sort(sortYear);\n    }\n\n    return seriesData.sort(sortTitle);\n  };\n\n  const handleSelect = sortKey => {\n    setSort(sortKey);\n  };\n\n  const sortTitle = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = 1;\n    } else if (titleA < titleB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  const sortYear = (a, b) => {\n    return a.releaseYear - b.releaseYear;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Dropdown, {\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Sort\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Title Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Title Desc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Release Year Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Release Year Desc\"))), React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      maxWidth: '100%',\n      flexWrap: 'wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, getSortedData(sort).map(v => React.createElement(Content, {\n    key: v.title,\n    title: v.title,\n    url: v.images.PosterArt.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nexport default Series;","map":{"version":3,"sources":["C:/Users/bikahraman/Desktop/son/challenge/src/Pages/Series/Series.jsx"],"names":["React","useState","useEffect","Header","Footer","Content","Container","Navbar","Nav","NavItem","NavDropdown","Button","Form","FormControl","DropdownButton","Dropdown","Series","seriesData","sort","setSort","searchTerm","setSearchTerm","handleChange","event","target","value","getSortedData","sortKey","console","log","sortYear","sortTitle","handleSelect","a","b","titleA","title","toUpperCase","titleB","comparison","releaseYear","display","flexDirection","maxWidth","flexWrap","map","v","images","PosterArt","url"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport Content from \"../../Components/Content/Content\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Navbar, Nav, NavItem, NavDropdown, Button , Form , FormControl,DropdownButton,Dropdown} from 'react-bootstrap';\r\n\r\n\r\nconst Series = ({seriesData}) => {\r\n \r\n    const [sort, setSort] = useState(\"title\");\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const handleChange = event => {\r\n      setSearchTerm(event.target.value);\r\n    };\r\n \r\n\r\n\r\n    const getSortedData = (sortKey) => { \r\n      \r\n      console.log(sortKey);\r\n     if(sortKey === 'year') {\r\n        return seriesData.sort(sortYear);\r\n     }\r\n\r\n     return seriesData.sort(sortTitle);\r\n    };\r\n\r\n    const handleSelect = (sortKey) => {\r\n      setSort(sortKey);\r\n    };\r\n\r\n    const sortTitle = (a, b ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = 1;\r\n      } else if (titleA < titleB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const sortYear = (a,b) => {\r\n      return  a.releaseYear-b.releaseYear;\r\n    };\r\n\r\n\r\n    \r\n    return(\r\n    <div>\r\n        <Header/>\r\n\r\n        <Dropdown onSelect={handleSelect}>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          Sort\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"title\">Title Asc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"title\">Title Desc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"year\">Release Year Asc</Dropdown.Item> \r\n          <Dropdown.Item eventKey=\"year\">Release Year Desc</Dropdown.Item> \r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n        \r\n \r\n    {/* <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"  onChange={handleChange} />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n  </Navbar> */}\r\n\r\n        <Container   style = {{display: 'flex', flexDirection: 'row', maxWidth: '100%', flexWrap: 'wrap'}}> \r\n          {getSortedData(sort).map (  v =>  <Content key={v.title} title = {v.title} url ={v.images.PosterArt.url} /> )} \r\n        </Container>\r\n        <Footer/>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}
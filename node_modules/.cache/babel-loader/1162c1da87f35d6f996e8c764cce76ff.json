{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikahraman\\\\Desktop\\\\challenge\\\\src\\\\Pages\\\\Series\\\\Series.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Header from \"../../Components/Header/Header\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Content from \"../../Components/Content/Content\";\nimport { Dropdown, Form, FormControl, Button, Navbar } from 'react-bootstrap';\nimport Searchbar from '../../Components/Searchbar';\nimport Dropdownbar from '../../Components/Dropdownbar';\nimport '../MoviesAndSeries.css';\n\nconst Series = ({\n  seriesData\n}) => {\n  const [sort, setSort] = useState(\"\");\n  const [searchData, setSearchData] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const myCallback = (searchTerm, sort) => {\n    setSearchTerm(searchTerm);\n    setSort(sort);\n  };\n\n  useEffect(() => {\n    let results = seriesData.filter(item => item.title.toLowerCase().includes(searchTerm));\n    setSearchData(results);\n  }, [searchTerm]);\n\n  const getSortedData = sortKey => {\n    console.log(seriesData);\n\n    if (sortKey === 'yearAsc') {\n      return [].slice.call(seriesData).sort(sortYearAsc);\n    }\n\n    if (sortKey === 'yearDesc') {\n      return [].slice.call(seriesData).sort(sortYearDesc);\n    }\n\n    if (sortKey === 'titleDesc') {\n      return [].slice.call(seriesData).sort(sortTitleDesc);\n    }\n\n    if (sortKey === 'search') {\n      return searchData;\n    }\n\n    return [].slice.call(seriesData).sort(sortTitleAsc);\n  };\n\n  const handleSelect = sortKey => {\n    setSort(sortKey);\n  };\n\n  const sortTitleAsc = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = 1;\n    } else if (titleA < titleB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  const sortTitleDesc = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = -1;\n    } else if (titleA < titleB) {\n      comparison = 1;\n    }\n\n    return comparison;\n  };\n\n  const sortYearAsc = (a, b) => {\n    return a.releaseYear - b.releaseYear;\n  };\n\n  const sortYearDesc = (a, b) => {\n    return b.releaseYear - a.releaseYear;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    \"data-testid\": \"navbar\",\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Searchbar, {\n    callbackFromParent: myCallback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Dropdown, {\n    onSelect: handleSelect,\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Sort\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"titleAsc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Title Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"titleDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Title Desc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"yearAsc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Release Year Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"yearDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Release Year Desc\")))), React.createElement(\"div\", {\n    className: \"content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, getSortedData(sort).map(v => React.createElement(Content, {\n    key: v.title,\n    title: v.title,\n    url: v.images.PosterArt.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nSeries.propTypes = {\n  seriesData: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    programType: PropTypes.string,\n    images: PropTypes.shape({}),\n    releaseYear: PropTypes.number\n  })).isRequired\n};\nexport default Series;","map":{"version":3,"sources":["C:/Users/bikahraman/Desktop/challenge/src/Pages/Series/Series.jsx"],"names":["React","useState","useEffect","PropTypes","Header","Footer","Content","Dropdown","Form","FormControl","Button","Navbar","Searchbar","Dropdownbar","Series","seriesData","sort","setSort","searchData","setSearchData","searchTerm","setSearchTerm","myCallback","results","filter","item","title","toLowerCase","includes","getSortedData","sortKey","console","log","slice","call","sortYearAsc","sortYearDesc","sortTitleDesc","sortTitleAsc","handleSelect","a","b","titleA","toUpperCase","titleB","comparison","releaseYear","map","v","images","PosterArt","url","propTypes","arrayOf","shape","string","description","programType","number","isRequired"],"mappings":"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","sourcesContent":["import React ,{useState ,useEffect}from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport Content from \"../../Components/Content/Content\";\r\nimport { Dropdown ,Form ,FormControl,Button,Navbar} from 'react-bootstrap';\r\nimport Searchbar from '../../Components/Searchbar';\r\nimport Dropdownbar from '../../Components/Dropdownbar';\r\nimport '../MoviesAndSeries.css';\r\n\r\nconst Series = ({seriesData}) => {\r\n \r\n    const [sort, setSort] = useState(\"\");\r\n    const [searchData, setSearchData] = useState(\"\");\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n   \r\n    \r\n const myCallback = (searchTerm , sort) => {\r\n  setSearchTerm(searchTerm);\r\n  setSort(sort);\r\n \r\n};\r\n\r\n\r\n    useEffect(() => {\r\n     let results= seriesData.filter(item =>\r\n      item.title.toLowerCase().includes(searchTerm)\r\n      );\r\n      setSearchData(results);\r\n    }, [searchTerm]);\r\n\r\n    const getSortedData = (sortKey) => { \r\nconsole.log(seriesData);\r\n     if(sortKey === 'yearAsc') {\r\n     \r\n        return [].slice.call(seriesData).sort(sortYearAsc);\r\n     }\r\n     if(sortKey === 'yearDesc') {\r\n      return [].slice.call(seriesData).sort(sortYearDesc);\r\n      }\r\n      if(sortKey === 'titleDesc'){\r\n        return [].slice.call(seriesData).sort(sortTitleDesc);\r\n      }\r\n      if(sortKey ==='search'){\r\n        return searchData\r\n      }\r\n\r\n     return [].slice.call(seriesData).sort(sortTitleAsc);\r\n    };\r\n\r\n    const handleSelect = (sortKey) => {\r\n      setSort(sortKey);\r\n \r\n    };\r\n    const sortTitleAsc = (a, b ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = 1;\r\n      } else if (titleA < titleB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const sortTitleDesc = (a, b ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = -1;\r\n      } else if (titleA < titleB) {\r\n        comparison = 1;\r\n      }\r\n      return comparison;\r\n    };\r\n    const sortYearAsc = (a,b) => {\r\n        return  a.releaseYear-b.releaseYear;\r\n     \r\n    };\r\n\r\n    const sortYearDesc = (a,b) => {\r\n      return  b.releaseYear-a.releaseYear;\r\n   \r\n  };\r\n\r\n\r\n    \r\n    return(\r\n    <React.Fragment>\r\n        <Header/>\r\n        <Navbar   data-testid=\"navbar\" className=\"navbar\"> \r\n        <Searchbar  callbackFromParent={myCallback}/>\r\n        <Dropdown onSelect={handleSelect} className=\"dropdown\">\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          Sort\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"titleAsc\">Title Asc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"titleDesc\">Title Desc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"yearAsc\">Release Year Asc</Dropdown.Item> \r\n          <Dropdown.Item eventKey=\"yearDesc\">Release Year Desc</Dropdown.Item> \r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      </Navbar>\r\n      <div  className=\"content-container\"> \r\n          {getSortedData(sort).map (  v =>  <Content key={v.title} title = {v.title} url ={v.images.PosterArt.url} /> )} \r\n      </div>\r\n      <Footer/>\r\n    </React.Fragment>);\r\n};\r\n\r\n\r\n\r\nSeries.propTypes = {\r\n  seriesData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      description: PropTypes.string,\r\n      programType: PropTypes.string,\r\n      images: PropTypes.shape({}),\r\n      releaseYear:PropTypes.number\r\n    }),\r\n  ).isRequired,\r\n\r\n};\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}
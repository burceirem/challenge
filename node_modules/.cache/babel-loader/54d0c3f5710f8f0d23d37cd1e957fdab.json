{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikahraman\\\\Desktop\\\\son\\\\challenge\\\\src\\\\Pages\\\\Series\\\\Series.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Content from \"../../Components/Content/Content\";\nimport Container from 'react-bootstrap/Container';\nimport { Navbar, Nav, NavItem, NavDropdown, Button, Form, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\n\nconst Series = props => {\n  // const{seriesData}= props;\n  const [data, setData] = useState(props);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    setData(props);\n  }, [props]); //console.log(data);\n\n  const compare = (a, b, c) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = 1;\n    } else if (titleA < titleB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  const onClickr = () => {\n    console.log(data); //  setData( data.sort(year)) ;\n  };\n\n  const year = (a, b) => {\n    return a.releaseYear - b.releaseYear;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(DropdownButton, {\n    id: \"dropdown-basic-button\",\n    title: \"Dropdown button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onClick: onClickr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Action\"), React.createElement(Dropdown.Item, {\n    href: \"#/action-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Another action\"), React.createElement(Dropdown.Item, {\n    href: \"#/action-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Something else\")), React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      maxWidth: '100%',\n      flexWrap: 'wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, data.seriesData.map(v => React.createElement(Content, {\n    key: v.title,\n    title: v.title,\n    url: v.images.PosterArt.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nexport default Series;","map":{"version":3,"sources":["C:/Users/bikahraman/Desktop/son/challenge/src/Pages/Series/Series.jsx"],"names":["React","useState","useEffect","Header","Footer","Content","Container","Navbar","Nav","NavItem","NavDropdown","Button","Form","FormControl","DropdownButton","Dropdown","Series","props","data","setData","searchTerm","setSearchTerm","handleChange","event","target","value","compare","a","b","c","titleA","title","toUpperCase","titleB","comparison","onClickr","console","log","year","releaseYear","display","flexDirection","maxWidth","flexWrap","seriesData","map","v","images","PosterArt","url"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect}from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport Content from \"../../Components/Content/Content\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Navbar, Nav, NavItem, NavDropdown, Button , Form , FormControl,DropdownButton,Dropdown} from 'react-bootstrap';\r\n\r\n\r\nconst Series = (props) => {\r\n\r\n   // const{seriesData}= props;\r\n\r\n    const [data, setData] = useState(props);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const handleChange = event => {\r\n      setSearchTerm(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n      setData(props);\r\n  }, [props]);\r\n\r\n//console.log(data);\r\n\r\n \r\n\r\n    const compare = (a, b ,c ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = 1;\r\n      } else if (titleA < titleB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n\r\n\r\n    const onClickr = () => {\r\nconsole.log(data);\r\n   //  setData( data.sort(year)) ;\r\n\r\n    };\r\n\r\n    const year = (a,b) => {\r\n      return  a.releaseYear-b.releaseYear;\r\n    };\r\n\r\n\r\n    \r\n    return(\r\n    <div>\r\n        <Header/>\r\n        {/* <Navbar>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n         <Nav className=\"mr-auto\">\r\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item onClick={ () => seriesData.sort(year)}>Sort by year in descending order</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={seriesData.sort(year)}>Sort by year in ascending order</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={seriesData.sort(compare)}>Sort by title in descending order</NavDropdown.Item>\r\n        <NavDropdown.Item onClick={seriesData.sort(compare)}>Sort by title in ascending order</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav> */}\r\n    <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\">\r\n  <Dropdown.Item onClick={ onClickr}>Action</Dropdown.Item>\r\n  <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n  <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n</DropdownButton>\r\n \r\n    {/* <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"  onChange={handleChange} />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n  </Navbar> */}\r\n\r\n        <Container   style = {{display: 'flex', flexDirection: 'row', maxWidth: '100%', flexWrap: 'wrap'}}> \r\n          {data.seriesData.map (  v =>  <Content key={v.title} title = {v.title} url ={v.images.PosterArt.url} /> )} \r\n        </Container>\r\n        <Footer/>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}
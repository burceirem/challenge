{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikahraman\\\\Desktop\\\\challenge\\\\src\\\\Pages\\\\Series\\\\Series.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Content from \"../../Components/Content/Content\";\nimport Container from 'react-bootstrap/Container';\nimport { Dropdown, Form, FormControl, Button } from 'react-bootstrap';\n\nconst Series = ({\n  seriesData\n}) => {\n  const [sort, setSort] = useState(\"\");\n  const [searchData, setSearchData] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTermCount, setSearchTermCount] = useState(\"\");\n  useEffect(() => {\n    let results = seriesData.filter(item => item.title.toLowerCase().includes(searchTerm));\n    setSearchData(results);\n  }, [searchTermCount]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n    if (searchTerm.length >= 3) setSearchTermCount(searchTerm);\n    setSort('search');\n  };\n\n  const getSortedData = sortKey => {\n    if (sortKey === 'yearAsc') {\n      return seriesData.sort(sortYearAsc);\n    }\n\n    if (sortKey === 'yearDesc') {\n      return seriesData.sort(sortYearDesc);\n    }\n\n    if (sortKey === 'titleDesc') {\n      return seriesData.sort(sortTitleDesc);\n    }\n\n    if (sortKey === 'search') {\n      return searchData;\n    }\n\n    return seriesData.sort(sortTitleAsc);\n  };\n\n  const handleSelect = sortKey => {\n    setSort(sortKey);\n  };\n\n  const sortTitleAsc = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = 1;\n    } else if (titleA < titleB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  const sortTitleDesc = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = -1;\n    } else if (titleA < titleB) {\n      comparison = 1;\n    }\n\n    return comparison;\n  };\n\n  const sortYearAsc = (a, b) => {\n    return a.releaseYear - b.releaseYear;\n  };\n\n  const sortYearDesc = (a, b) => {\n    return b.releaseYear - a.releaseYear;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Dropdown, {\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Sort\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"titleAsc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Title Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"titleDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Title Desc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"yearAsc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Release Year Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"yearDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Release Year Desc\"))), React.createElement(Form, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    eventKey: \"search\",\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \"mr-sm-2\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outline-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Search\")), React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      maxWidth: '100%',\n      flexWrap: 'wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, getSortedData(sort).map(v => React.createElement(Content, {\n    key: v.title,\n    title: v.title,\n    url: v.images.PosterArt.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }));\n};\n\nexport default Series;","map":{"version":3,"sources":["C:/Users/bikahraman/Desktop/challenge/src/Pages/Series/Series.jsx"],"names":["React","useState","useEffect","Header","Footer","Content","Container","Dropdown","Form","FormControl","Button","Series","seriesData","sort","setSort","searchData","setSearchData","searchTerm","setSearchTerm","searchTermCount","setSearchTermCount","results","filter","item","title","toLowerCase","includes","handleChange","event","target","value","length","getSortedData","sortKey","sortYearAsc","sortYearDesc","sortTitleDesc","sortTitleAsc","handleSelect","a","b","titleA","toUpperCase","titleB","comparison","releaseYear","display","flexDirection","maxWidth","flexWrap","map","v","images","PosterArt","url"],"mappings":"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","sourcesContent":["import React ,{useState ,useEffect}from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport Content from \"../../Components/Content/Content\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Dropdown ,Form ,FormControl,Button} from 'react-bootstrap';\r\n\r\n\r\nconst Series = ({seriesData}) => {\r\n \r\n    const [sort, setSort] = useState(\"\");\r\n    const [searchData, setSearchData] = useState(\"\");\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchTermCount, setSearchTermCount] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n     let results= seriesData.filter(item =>\r\n      item.title.toLowerCase().includes(searchTerm)\r\n      );\r\n      setSearchData(results);\r\n    }, [searchTermCount]);\r\n\r\n    const handleChange = event => {\r\n      \r\n      setSearchTerm(event.target.value);\r\n      if(searchTerm.length >= 3) \r\n        setSearchTermCount(searchTerm)\r\n\r\n      setSort('search');\r\n    };\r\n\r\n    const getSortedData = (sortKey) => { \r\n\r\n     if(sortKey === 'yearAsc') {\r\n        return seriesData.sort(sortYearAsc);\r\n     }\r\n     if(sortKey === 'yearDesc') {\r\n      return seriesData.sort(sortYearDesc);\r\n      }\r\n      if(sortKey === 'titleDesc'){\r\n        return seriesData.sort(sortTitleDesc);\r\n      }\r\n      if(sortKey ==='search'){\r\n        return searchData\r\n      }\r\n\r\n     return seriesData.sort(sortTitleAsc);\r\n    };\r\n\r\n    const handleSelect = (sortKey) => {\r\n      setSort(sortKey);\r\n\r\n    };\r\n\r\n    const sortTitleAsc = (a, b ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = 1;\r\n      } else if (titleA < titleB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const sortTitleDesc = (a, b ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = -1;\r\n      } else if (titleA < titleB) {\r\n        comparison = 1;\r\n      }\r\n      return comparison;\r\n    };\r\n    const sortYearAsc = (a,b) => {\r\n        return  a.releaseYear-b.releaseYear;\r\n     \r\n    };\r\n\r\n    const sortYearDesc = (a,b) => {\r\n      return  b.releaseYear-a.releaseYear;\r\n   \r\n  };\r\n\r\n\r\n    \r\n    return(\r\n    <div>\r\n        <Header/>\r\n\r\n        <Dropdown onSelect={handleSelect}>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          Sort\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"titleAsc\">Title Asc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"titleDesc\">Title Desc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"yearAsc\">Release Year Asc</Dropdown.Item> \r\n          <Dropdown.Item eventKey=\"yearDesc\">Release Year Desc</Dropdown.Item> \r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n        \r\n \r\n    <Form inline>\r\n      <FormControl eventKey=\"search\" type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"  onChange={handleChange}  />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n \r\n\r\n        <Container   style = {{display: 'flex', flexDirection: 'row', maxWidth: '100%', flexWrap: 'wrap'}}> \r\n          {getSortedData(sort).map (  v =>  <Content key={v.title} title = {v.title} url ={v.images.PosterArt.url} /> )} \r\n        </Container>\r\n        <Footer/>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikahraman\\\\Desktop\\\\challenge\\\\src\\\\Pages\\\\Movies\\\\Movies.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Content from '../../Components/Content/Content';\nimport Header from \"../../Components/Header/Header\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport { Dropdown, Form, FormControl, Button, Navbar } from 'react-bootstrap';\nimport '../MoviesAndSeries.css';\n\nconst Movies = ({\n  moviesData\n}) => {\n  const [sort, setSort] = useState(\"\");\n  const [searchData, setSearchData] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    let results = moviesData.filter(item => item.title.toLowerCase().includes(searchTerm));\n    setSearchData(results);\n  }, [searchTerm]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n    setSort('search');\n  };\n\n  const getSortedData = sortKey => {\n    if (sortKey === 'yearAsc') {\n      return moviesData.sort(sortYearAsc);\n    }\n\n    if (sortKey === 'yearDesc') {\n      return moviesData.sort(sortYearDesc);\n    }\n\n    if (sortKey === 'titleDesc') {\n      return moviesData.sort(sortTitleDesc);\n    }\n\n    if (sortKey === 'search') {\n      return searchData;\n    }\n\n    return moviesData.sort(sortTitleAsc);\n  };\n\n  const handleSelect = sortKey => {\n    setSort(sortKey);\n  };\n\n  const sortTitleAsc = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = 1;\n    } else if (titleA < titleB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  const sortTitleDesc = (a, b) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = -1;\n    } else if (titleA < titleB) {\n      comparison = 1;\n    }\n\n    return comparison;\n  };\n\n  const sortYearAsc = (a, b) => {\n    return a.releaseYear - b.releaseYear;\n  };\n\n  const sortYearDesc = (a, b) => {\n    return b.releaseYear - a.releaseYear;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Sort\"), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    eventKey: \"titleAsc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Title Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"titleDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Title Desc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"yearAsc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Release Year Asc\"), React.createElement(Dropdown.Item, {\n    eventKey: \"yearDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Release Year Desc\"))), React.createElement(Form, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    eventKey: \"search\",\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \"mr-sm-2\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outline-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Search\"))), React.createElement(\"div\", {\n    className: \"content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, getSortedData(sort).map(v => React.createElement(Content, {\n    key: v.title,\n    title: v.title,\n    url: v.images.PosterArt.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nMovies.propTypes = {\n  moviesData: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired\n};\nexport default Movies;","map":{"version":3,"sources":["C:/Users/bikahraman/Desktop/challenge/src/Pages/Movies/Movies.jsx"],"names":["React","useState","useEffect","PropTypes","Content","Header","Footer","Dropdown","Form","FormControl","Button","Navbar","Movies","moviesData","sort","setSort","searchData","setSearchData","searchTerm","setSearchTerm","results","filter","item","title","toLowerCase","includes","handleChange","event","target","value","getSortedData","sortKey","sortYearAsc","sortYearDesc","sortTitleDesc","sortTitleAsc","handleSelect","a","b","titleA","toUpperCase","titleB","comparison","releaseYear","map","v","images","PosterArt","url","propTypes","arrayOf","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Content from '../../Components/Content/Content';\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport { Dropdown ,Form ,FormControl,Button,Navbar} from 'react-bootstrap';\r\nimport '../MoviesAndSeries.css';\r\n\r\n\r\nconst Movies = ({moviesData}) => {\r\n\r\n  const [sort, setSort] = useState(\"\");\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n \r\n  \r\n  useEffect(() => {\r\n    let results= moviesData.filter(item =>\r\n     item.title.toLowerCase().includes(searchTerm)\r\n     );\r\n     setSearchData(results);\r\n   }, [searchTerm]);\r\n\r\n   const handleChange = event => {\r\n     setSearchTerm(event.target.value);\r\n     setSort('search');\r\n   };\r\n\r\n   const getSortedData = (sortKey) => { \r\n\r\n    if(sortKey === 'yearAsc') {\r\n       return moviesData.sort(sortYearAsc);\r\n    }\r\n    if(sortKey === 'yearDesc') {\r\n     return moviesData.sort(sortYearDesc);\r\n     }\r\n     if(sortKey === 'titleDesc'){\r\n       return moviesData.sort(sortTitleDesc);\r\n     }\r\n     if(sortKey ==='search'){\r\n       return searchData\r\n     }\r\n\r\n    return moviesData.sort(sortTitleAsc);\r\n   };\r\n\r\n   const handleSelect = (sortKey) => {\r\n     setSort(sortKey);\r\n\r\n   };\r\n\r\n   const sortTitleAsc = (a, b ) => {\r\n     const titleA = a.title.toUpperCase();\r\n     const titleB = b.title.toUpperCase();\r\n     let comparison = 0;\r\n\r\n     if (titleA > titleB) {\r\n       comparison = 1;\r\n     } else if (titleA < titleB) {\r\n       comparison = -1;\r\n     }\r\n     return comparison;\r\n   };\r\n\r\n   const sortTitleDesc = (a, b ) => {\r\n     const titleA = a.title.toUpperCase();\r\n     const titleB = b.title.toUpperCase();\r\n     let comparison = 0;\r\n\r\n     if (titleA > titleB) {\r\n       comparison = -1;\r\n     } else if (titleA < titleB) {\r\n       comparison = 1;\r\n     }\r\n     return comparison;\r\n   };\r\n   const sortYearAsc = (a,b) => {\r\n       return  a.releaseYear-b.releaseYear;\r\n    \r\n   };\r\n\r\n   const sortYearDesc = (a,b) => {\r\n     return  b.releaseYear-a.releaseYear;\r\n  \r\n };\r\n \r\n   \r\n\r\nreturn (\r\n  <div>\r\n       <Header/>\r\n       <Navbar> \r\n        <Dropdown onSelect={handleSelect}>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          Sort\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"titleAsc\">Title Asc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"titleDesc\">Title Desc</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"yearAsc\">Release Year Asc</Dropdown.Item> \r\n          <Dropdown.Item eventKey=\"yearDesc\">Release Year Desc</Dropdown.Item> \r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n       <Form inline>\r\n        <FormControl eventKey=\"search\" type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"  onChange={handleChange}  />\r\n         <Button variant=\"outline-success\">Search</Button>\r\n      </Form>\r\n      </Navbar>\r\n        <div   className=\"content-container\"> \r\n          {getSortedData(sort).map (  v =>  <Content key={v.title} title = {v.title} url ={v.images.PosterArt.url} /> )} \r\n        </div>\r\n        <Footer/>\r\n\r\n        </div>\r\n    \r\n);\r\n\r\n}\r\nMovies.propTypes = {\r\n  moviesData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      url: PropTypes.string\r\n    }),\r\n  ).isRequired,\r\n\r\n};\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikahraman\\\\Desktop\\\\son\\\\challenge\\\\src\\\\Pages\\\\Series\\\\Series.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport Footer from \"../../Components/Footer/Footer\";\nimport Content from \"../../Components/Content/Content\";\nimport Container from 'react-bootstrap/Container';\nimport { Navbar, Nav, NavItem, NavDropdown, Button, Form, FormControl } from 'react-bootstrap';\n\nconst Series = props => {\n  const {\n    seriesData\n  } = props;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const compare = (a, b, c) => {\n    const titleA = a.title.toUpperCase();\n    const titleB = b.title.toUpperCase();\n    const yearA = a.releaseYear;\n    const yearB = b.releaseYear;\n    let comparison = 0;\n\n    if (titleA > titleB) {\n      comparison = 1;\n    } else if (titleA < titleB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  };\n\n  const year = (a, b) => {\n    return a.releaseYear - b.releaseYear;\n  }; // function compare(a, b) {\n  //     const titleA = a.title.toUpperCase();\n  //     const titleB = b.title.toUpperCase();\n  //     let comparison = 0;\n  //     if (titleA > titleB) {\n  //       comparison = 1;\n  //     } else if (titleA < titleB) {\n  //       comparison = -1;\n  //     }\n  //     return comparison;\n  //   }\n\n\n  console.log(seriesData.sort(compare));\n  console.log(seriesData.sort(year));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(NavDropdown, {\n    title: \"Dropdown\",\n    id: \"basic-nav-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(NavDropdown.Item, {\n    onClick: seriesData.sort(compare),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Sort by year in descending order\"), React.createElement(NavDropdown.Item, {\n    href: \"#action/3.2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Sort by year in ascending order\"), React.createElement(NavDropdown.Item, {\n    href: \"#action/3.3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sort by title in descending order\"), React.createElement(NavDropdown.Item, {\n    href: \"#action/3.3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Sort by title in ascending order\"), React.createElement(NavDropdown.Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(NavDropdown.Item, {\n    href: \"#action/3.4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Separated link\"))), React.createElement(Form, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \"mr-sm-2\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outline-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Search\")))), React.createElement(Container, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      maxWidth: '100%',\n      flexWrap: 'wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, seriesData.map(v => React.createElement(Content, {\n    key: v.title,\n    title: v.title,\n    url: v.images.PosterArt.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default Series;","map":{"version":3,"sources":["C:/Users/bikahraman/Desktop/son/challenge/src/Pages/Series/Series.jsx"],"names":["React","useState","Header","Footer","Content","Container","Navbar","Nav","NavItem","NavDropdown","Button","Form","FormControl","Series","props","seriesData","searchTerm","setSearchTerm","handleChange","event","target","value","compare","a","b","c","titleA","title","toUpperCase","titleB","yearA","releaseYear","yearB","comparison","year","console","log","sort","display","flexDirection","maxWidth","flexWrap","map","v","images","PosterArt","url"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport Content from \"../../Components/Content/Content\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Navbar, Nav, NavItem, NavDropdown, Button , Form , FormControl} from 'react-bootstrap';\r\n\r\n\r\nconst Series = (props) => {\r\n\r\n    const{seriesData}= props;\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const handleChange = event => {\r\n      setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const compare = (a, b ,c ) => {\r\n      const titleA = a.title.toUpperCase();\r\n      const titleB = b.title.toUpperCase();\r\n      const yearA = a.releaseYear;\r\n      const yearB = b.releaseYear;\r\n\r\n      let comparison = 0;\r\n\r\n      if (titleA > titleB) {\r\n        comparison = 1;\r\n      } else if (titleA < titleB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    const year = (a,b) => {\r\n      return  a.releaseYear-b.releaseYear;\r\n    };\r\n    // function compare(a, b) {\r\n    //     const titleA = a.title.toUpperCase();\r\n    //     const titleB = b.title.toUpperCase();\r\n    //     let comparison = 0;\r\n    //     if (titleA > titleB) {\r\n    //       comparison = 1;\r\n    //     } else if (titleA < titleB) {\r\n    //       comparison = -1;\r\n    //     }\r\n    //     return comparison;\r\n    //   }\r\n      \r\n    console.log(seriesData.sort(compare));\r\n    console.log(seriesData.sort(year));\r\n    return(\r\n    <div>\r\n        <Header/>\r\n        <Navbar>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n         <Nav className=\"mr-auto\">\r\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item onClick={seriesData.sort(compare)}>Sort by year in descending order</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Sort by year in ascending order</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Sort by title in descending order</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Sort by title in ascending order</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n \r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"  onChange={handleChange} />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n  </Navbar>\r\n\r\n        <Container   style = {{display: 'flex', flexDirection: 'row', maxWidth: '100%', flexWrap: 'wrap'}}> \r\n          {seriesData.map (  v =>  <Content key={v.title} title = {v.title} url ={v.images.PosterArt.url} /> )} \r\n        </Container>\r\n        <Footer/>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default Series;"]},"metadata":{},"sourceType":"module"}